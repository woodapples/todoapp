
ARG NODE_VERSION=24-alpine
ARG NGINX_VERSION=alpine3.22


# Stage 1: Build the application
FROM node:${NODE_VERSION} AS builder

WORKDIR /app

# Copy package files
COPY package.json package-lock.json ./

# Install dependencies (mit Netzwerk-Workaround)
RUN --mount=type=cache,target=/root/.npm npm ci

# Copy source code
COPY . .

# Build for production (fallback auf standard production config)
RUN npm run build

# Stage 2: Serve
FROM nginxinc/nginx-unprivileged:${NGINX_VERSION} AS runner

# Use a built-in non-root user for security best practices
USER nginx

# Copy custom Nginx config
COPY nginx.conf /etc/nginx/nginx.conf

# Copy the static build output from the build stage to Nginx's default HTML serving directory
COPY --chown=nginx:nginx --from=builder /app/dist/*/browser /usr/share/nginx/html

# Expose port 8080 to allow HTTP traffic
# Note: The default NGINX container now listens on port 8080 instead of 80 
EXPOSE 8088

# Start Nginx directly with custom config
ENTRYPOINT ["nginx", "-c", "/etc/nginx/nginx.conf"]
CMD ["-g", "daemon off;"]

